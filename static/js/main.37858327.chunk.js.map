{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/expenses/ExpenseFilter.js","components/UI/Card.js","components/expenses/ExpenseDate.js","components/expenses/ExpItem.js","components/expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/expenses/ExpensesChart.js","components/expenses/Expense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","e","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","htmlFor","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onChangeFilter","Card","classes","children","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpItem","ExpensesList","items","length","map","exp","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expense","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37858327.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\" \");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChaneHandler = (e) => {\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler=e=>{\r\n      e.preventDefault()\r\n      const expenseData={\r\n          title:enteredTitle,\r\n          amount:+enteredAmount,\r\n          date:new Date(enteredDate)\r\n      };\r\n      props.onSaveExpenseData(expenseData);\r\n      setEnteredTitle('');\r\n      setEnteredAmount('');\r\n      setEnteredDate('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input type=\"text\" value={enteredTitle} onChange={titleChaneHandler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Date</label>\r\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React,{ useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense=(props)=>{\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData)=>{\r\n\r\n        const expenseData={\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false)\r\n\r\n\r\n    };\r\n    const startEditingHandler=()=>{\r\n        setIsEditing(true)\r\n    };\r\n    const stopEditingHandler=()=>{\r\n        setIsEditing(false)\r\n    }\r\n    return (\r\n    <div className='new-expense'>\r\n        {!isEditing && <button onClick={startEditingHandler}>Add new expense</button>}\r\n        {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const filterChangeHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './Card.css'\r\n\r\n\r\nconst Card=(props)=>{\r\n    const classes='card '+props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card","import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate\r\n","import \"./ExpItem.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpItem = (props) => {\r\n  // const date= new Date(2021 ,2, 23)\r\n  // const item='laptop'\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpItem;\r\n","import React from 'react';\r\nimport './ExpensesList.css';\r\nimport ExpItem from './ExpItem'\r\n\r\nconst ExpensesList=(props)=>{\r\n    if(props.items.length===0){\r\n        return <h2 className=\"expenses-list__fallback \">Found no expenses</h2>\r\n    }\r\n    return <ul className='expenses-list'>\r\n        {props.items.map((exp) => (\r\n        <ExpItem\r\n          key={exp.id}\r\n          title={exp.title}\r\n          amount={exp.amount}\r\n          date={exp.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar=props=>{\r\n\r\n    let barFillHeight='0%';\r\n\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)+'%';\r\n    }\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n    const dataPointsValue=props.dataPoints.map(dataPoint=>dataPoint.value)\r\n    const totalMaximum=Math.max(...dataPointsValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport \"./Expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expense = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.expense.filter((exp) => {\r\n    return exp.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        {/* {filteredExpenses.length === 0 ? (\r\n          <p>no expenses</p>\r\n        ) : (\r\n          filteredExpenses.map((exp) => (\r\n            <ExpItem\r\n              key={exp.id}\r\n              title={exp.title}\r\n              amount={exp.amount}\r\n              date={exp.date}\r\n            />\r\n          ))\r\n        )}; */}\r\n\r\n                                        {/* alternative */}\r\n\r\n        {/* {filteredExpenses.length==0 && (<p>no expenses</p>)};\r\n        {filteredExpenses.length>0 && filteredExpenses.map((exp) => (\r\n      <ExpItem\r\n        key={exp.id}\r\n        title={exp.title}\r\n        amount={exp.amount}\r\n        date={exp.date}\r\n      />\r\n    ))} */}\r\n\r\n                                        {/* alternative */}\r\n\r\n        {/* {expensesContent} */}\r\n\r\n        <ExpensesList items={filteredExpenses}/>\r\n        \r\n\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n","import React, {useState} from 'react';\nimport \"./App.css\";\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expense from './components/expenses/Expense'\n\nconst DUMMY = [\n  // { id: \"e1\", title: \"airpod\", amount: \"500\", date: new Date(2020, 3, 21) },\n  // { id: \"e2\", title: \"car\", amount: \"2000\", date: new Date(2020, 2, 25) },\n  // { id: \"e3\", title: \"bike\", amount: \"200\", date: new Date(2020, 4, 31) },\n  // { id: \"e4\", title: \"phone\", amount: \"20\", date: new Date(2022, 3, 21) },\n];\n\nconst App=() => {\n  const [expenses, setExpenses] = useState(DUMMY)\n  \n\n  const addExpenseHandler=expense=>{\n    setExpenses(prevExpenses=>{return [expense, ...prevExpenses]})\n  }\n\n  return (\n    <div className=\" \">\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expense expense={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}